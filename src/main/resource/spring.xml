<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

<!--读取properties文件中的内容取值用EL表达式-->
    <context:property-placeholder location="classpath:DB.properties,classpath:redis.properties"/>

<!--    配置阿里的druid数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${driverClass}"/>
        <property name="url" value="${jdbcUrl}"/>
        <property name="username" value="${user}"/>
        <property name="password" value="${password}"/>
    </bean>

    <!--    配置sqlsessionfactory-->
    <bean id="sessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--        不要mybatis的主配置文件的配法-->
        <!--    扫描别名-->
        <property name="typeAliasesPackage" value="com.hy.ssm.lanxin.entity"/>
<!--        加载mybatisplus主配置文件-->
        <property name="configLocation" value="classpath:myBatis.xml"/>
<!--        mybatisplus自带的分页-->
        <property name="plugins">
            <array>
                <!-- 分页插件配置 -->
                <bean id="paginationInterceptor"
                      class="com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor"/>
            </array>
        </property>
    </bean>

<!--    spring批量扫描mybatis的mapper接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
        <property name="basePackage" value="com.hy.ssm.lanxin.mapper"/>
    </bean>

<!--&lt;!&ndash;   配置扫描业务bean注解 &ndash;&gt;-->
    <context:component-scan base-package="com.hy.ssm.lanxin.service"></context:component-scan>

    <!--配置事务-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--    开启事务扫描-->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>

    <bean class="com.hy.ssm.lanxin.uitls.SwaggerConfig"/>

    <import resource="classpath:spring-redis.xml"></import>

    <bean class="com.hy.ssm.lanxin.uitls.RedisConnRef">
        <property name="connectionFactory" ref="connectionFactory"></property>
    </bean>


</beans>